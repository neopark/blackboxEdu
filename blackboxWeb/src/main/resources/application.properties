
spring.main.web-application-type=servlet
server.port=2022

spring.servlet.multipart.maxFileSize=1024000000
## UTF-8
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true

spring.devtools.restart.enabled = true
spring.devtools.livereload.enabled=true

##redis
spring.redis.host=221.143.48.220
spring.redis.database=0
spring.redis.port=6333
spring.redis.password=7389

spring.jwt.secret =  ${random.uuid}
spring.jwt.access_token_validity=1h
spring.jwt.refresh_token_validity=2h

spring.security.debug.enabled=true

## MySQL
spring.datasource.driverClassName= org.mariadb.jdbc.Driver
spring.datasource.jdbc-url=jdbc:mysql://221.143.48.220:3306/blackboxNew?useSSL=false&useUnicode=true&characterEncoding=utf8
spring.datasource.username=blackbox
spring.datasource.password=ENC(TbSdqOUybtYz68CaUHYW/UKaCyXNFdqOQUKB+xDJ9ZI=)
spring.datasource.mapper-locations=classpath:/mapper/*.xml


jasypt.encryptor.bean=jasyptEncryptor

custom.path.upload-images=/home/elevblack/upload-test

#MyBatis PageHelper
pagehelper.helper-dialect=mysql
pagehelper.reasonable=true


# rootLogger
# Logger Level(Fatal > Error > Warning > Info > Debug > Trace), 객체명,   객체명
log4j.rootLogger=DEBUG, consoleAppender, fileAppender, sql
 
# rootLogger 에서 정의한 객체에 타입과 기능을 정의
# log4j.appender.consoleAppender => Console에 출력해주는 객체
# org.apache.log4j.ConsoleAppender : 콘솔애 출력해 주겠다.
log4j.appender.consoleAppender=org.apache.log4j.ConsoleAppender
log4j.appender.consoleAppender.Threshold=All

# layout : console에 출력을 할 때 ConversionPattern 형태로 출력을 해준다.
log4j.appender.consoleAppender.layout=org.apache.log4j.PatternLayout
# log4j.appender.consoleAppender.layout.ConversionPattern=[%t] %-5p %c %x - %m%n
log4j.appender.consoleAppender.layout.ConversionPattern=[%d] [%-5p] %c %x - %m%n
 
# log4j.appender.fileAppender => 파일로 저장하겠다.
# org.apache.log4j.RollingFileAppender 하루에 한번씩 파일을 생성해서 로그를 저장해 주겠다.
log4j.appender.fileAppender=org.apache.log4j.DailyRollingFileAppender
# File : 파일의 위치가 어디고 어떠한 파일을 명으로 생성하겠다.
# log4j.appender.fileAppender.File=demoApplication.log
log4j.appender.fileAppender.File=/log/log4j.log
# 하루가 지난 파일은 goodee.log에서 goodee.2021-04-12 이렇게 바꾸겠다.
log4j.appender.fileAppender.DatePattern='.'yyyy-MM-dd
log4j.appender.fileAppender.Threshold=All
log4j.appender.fileAppender.layout=org.apache.log4j.PatternLayout
# log4j.appender.fileAppender.layout.ConversionPattern=[%t] %-5p %c %x - %m%n
log4j.appender.fileAppender.layout.ConversionPattern=[%d] [%-5p] [%13F\:%L] - %m%n
